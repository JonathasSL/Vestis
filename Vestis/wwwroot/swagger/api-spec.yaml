openapi: 3.0.4
info:
  title: Vestis API
  description: Manage your tailoring
  contact:
    name: Vestis
    url: https://vestis.com
    email: contact@vestis.com
  version: v1
paths:
  /api/Auth/Register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: OK
  /api/Auth/Login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: OK
  '/api/StudioMembership/GetFromStudioId/{studioId}':
    get:
      tags:
        - StudioMembership
      parameters:
        - name: studioId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/api/StudioMembership/GetFromUserInStudio/{studioId}':
    get:
      tags:
        - StudioMembership
      parameters:
        - name: studioId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/StudioMembership/Post:
    post:
      tags:
        - StudioMembership
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudioMembershipModel'
          text/json:
            schema:
              $ref: '#/components/schemas/StudioMembershipModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudioMembershipModel'
      responses:
        '200':
          description: OK
  '/api/StudioMembership/Put/{id}':
    put:
      tags:
        - StudioMembership
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudioMembershipModel'
          text/json:
            schema:
              $ref: '#/components/schemas/StudioMembershipModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudioMembershipModel'
      responses:
        '200':
          description: OK
  '/api/StudioMembership/Delete/{Id}':
    delete:
      tags:
        - StudioMembership
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/api/Studios/GetById/{id}':
    get:
      tags:
        - Studios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/Studios/Create:
    post:
      tags:
        - Studios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudioModel'
          text/json:
            schema:
              $ref: '#/components/schemas/StudioModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudioModel'
      responses:
        '200':
          description: OK
  /api/Users/Me:
    get:
      tags:
        - Users
      responses:
        '200':
          description: OK
components:
  schemas:
    AddressModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
          nullable: true
        updatedDate:
          type: string
          format: date-time
          nullable: true
        deletedDate:
          type: string
          format: date-time
          nullable: true
        street:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        complement:
          type: string
          nullable: true
        neighborhood:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
      additionalProperties: false
    StudioMembershipModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        studioId:
          type: string
          format: uuid
        role:
          type: string
          nullable: true
      additionalProperties: false
    StudioModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
          nullable: true
        updatedDate:
          type: string
          format: date-time
          nullable: true
        deletedDate:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/AddressModel'
      additionalProperties: false
    UserModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
          nullable: true
        updatedDate:
          type: string
          format: date-time
          nullable: true
        deletedDate:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
      additionalProperties: false